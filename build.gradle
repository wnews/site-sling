import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.figurate:gradle-bundle-plugin:1.0.1-SNAPSHOT'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'docker'

subprojects {
    apply plugin: 'bundle'

    repositories {
        mavenCentral()
    }

    task mkClassesDir doLast {
        new File("$buildDir/classes/main").mkdirs()
        new File("$buildDir/osgi-classes").mkdirs()
    }
    tasks.processResources.dependsOn mkClassesDir

    processResources {
        filter ReplaceTokens, tokens: [
            "projectName": project.property('projectName'),
            "projectId": project.property('projectId'),
            "projectUrl": project.property('projectUrl'),
            "projectDomain": (project.property('projectUrl') =~ /(?:https?:\/\/)(.*)/)[0][1],
            "organization": project.property('organization'),
            "gaTrackingId": project.property('gaTrackingId'),
            "disqusShortName": project.property('disqusShortName'),
            "currentYear": Calendar.instance.get(Calendar.YEAR) as String
        ]
    }

    bundleInstall {
        uri = "$sling_url/system/console/bundles"
        username = sling_username
        password = sling_password
    }
}

docker {
    baseImage "micronode/whistlepost:1.1.1"
    maintainer project.property('organization')
}

task buildDocker(type: Docker) {
    applicationName = project.property('projectId')
    push 'true' == project.property('docker_push')
    apiUsername = project.property('docker_apiUsername')
    apiPassword = project.property('docker_apiPassword')
    apiEmail = project.property('docker_apiEmail')
    subprojects.each {
        addFile it.jar.archivePath, "/opt/sling/sling/startup/${project.property('bundleStartLevel')}/"
    }
    addFile 'sling.properties', '/opt/sling/'
    subprojects.each { dependsOn("${it.name}:jar") }
}
